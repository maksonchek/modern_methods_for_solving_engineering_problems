@prefix : <http://example.org/ont/task2#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://example.org/ont/task2> a owl:Ontology ;
    rdfs:comment "Исправленная онтология для Protégé + Pellet: класс Человек, ИмеетРодителя и транзитивное ИмеетПредка."@ru .

############################################################
# Класс
:Человек a owl:Class ;
    rdfs:label "Человек"@ru ;
    rdfs:comment "Каждый экземпляр этого класса по условию имеет ровно одного родителя (другого экземпляра класса Человек)."@ru ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty :ИмеетРодителя ;
        owl:cardinality "1"^^xsd:nonNegativeInteger
    ] .
############################################################

# Непосредственное свойство родитель-потомок
:ИмеетРодителя
    a owl:ObjectProperty ;
    rdfs:label "ИмеетРодителя"@ru ;
    rdfs:comment "Непосредственное отношение: у каждого Человека ровно один родитель (в данной модели)."@ru ;
    rdfs:domain :Человек ;
    rdfs:range  :Человек ;
    rdfs:subPropertyOf :ИмеетПредка ;
    owl:inverseOf :ИмеетРебенка .

# Обратное непосредственное (ребёнок)
:ИмеетРебенка
    a owl:ObjectProperty ;
    rdfs:label "ИмеетРебенка"@ru ;
    rdfs:domain :Человек ;
    rdfs:range  :Человек ;
    rdfs:subPropertyOf :ИмеетПотомка ;
    owl:inverseOf :ИмеетРодителя .

# Транзитивное свойство предка (объявлено только для ИмеетПредка)
# (мы не объявляем ИмеетПотомка транзитивным отдельно — inverseOf транзитивного свойства
# будет интерпретироваться как транзитивность в логической интерпретации, и это
# устраняет некоторые ограничения/несовместимости у Pellet.)
:ИмеетПредка
    a owl:ObjectProperty , owl:TransitiveProperty ;
    rdfs:label "ИмеетПредка"@ru ;
    rdfs:comment "Транзитивное свойство: прямые и непрямые предки."@ru ;
    rdfs:domain :Человек ;
    rdfs:range  :Человек ;
    owl:inverseOf :ИмеетПотомка .

# Обратное свойство (не объявляем здесь транзитивным напрямую)
:ИмеетПотомка
    a owl:ObjectProperty ;
    rdfs:label "ИмеетПотомка"@ru ;
    rdfs:comment "Обратное к ИмеетПредка (потомки)."@ru ;
    rdfs:domain :Человек ;
    rdfs:range  :Человек ;
    owl:inverseOf :ИмеетПредка .

############################################################
# Тестовые индивидуумы
:Anna a :Человек ;
    rdfs:label "Анна"@ru ;
    :ИмеетРодителя :Boris .

:Boris a :Человек ;
    rdfs:label "Борис"@ru ;
    :ИмеетРодителя :Viktor .

:Viktor a :Человек ;
    rdfs:label "Виктор"@ru ;
    :ИмеетРодителя :Grigory .

:Grigory a :Человек ;
    rdfs:label "Григорий"@ru .

:Elena a :Человек ;
    rdfs:label "Елена"@ru ;
    :ИмеетРодителя :Boris .
############################################################

# Пояснения изменений (коротко):
# 1) Убраны объявления owl:TransitiveProperty/AsymmetricProperty/IrreflexiveProperty
#    на обоих свойствах одновременно — иногда у Pellet вызывает ошибку при некоторых
#    комбинациях признаков. Оставлено только транзитивное объявление для :ИмеетПредка.
# 2) Заменено qualifiedCardinality на простое owl:cardinality 1 — более совместимо
#    с конфигурациями reasoner`ов и проще для демонстрации требования "ровно одного".
# 3) Убраны FunctionalProperty/IrreflexiveProperty/AsymmetricProperty — если нужны
#    эти ограничения, их можно аккуратно добавить позже (или использовать другой
#    reasoner: HermiT обычно поддерживает больше комбинаций), но пока это избавляет
#    от ошибки при запуске Pellet.
# 4) :ИмеетРодителя объявлено под-свойством :ИмеетПредка, а :ИмеетПредка — транзитивно,
#    поэтому при запуске Pellet вы получите вывод всех непрямых предков/потомков.

# Инструкция:
# 1) Откройте Protégé, загрузите этот TTL.
# 2) В меню Reasoner выберите Pellet и запустите его.
# 3) Вкладка "Inferred" (или окно "Inferences") покажет выведенные отношения :ИмеетПредка
#    и :ИмеетПотомка. Например, после вывода должно появиться: :Anna :ИмеетПредка :Viktor и :Anna :ИмеетПредка :Grigory.

# Если после этого все ещё возникнет ошибка — пришлите полный лог (как вы сделали выше),
# и я подскажу дальнейшие шаги (включая вариант с HermiT или тонкой настройкой характеристик свойств).
